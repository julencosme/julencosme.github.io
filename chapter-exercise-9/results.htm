<!DOCTYPE html>
<html lang="en">
<head>
  <!--
    JavaScript 6th Edition
    Chapter 9
    Chapter case

    Eating Well in Season results page
    Author: Julen D. Cosme
    Date:   01 April 2016

    Filename: results.htm
  -->
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1.0">
  <title>Eating Well in Season - Results</title>
  <link rel="stylesheet" media="screen and (max-device-width: 999px)" href="styleshh.css" />
  <link rel="stylesheet" media="screen and (min-device-width: 1000px)" href="styles.css" />
  <!--[if lt IE 9]>
    <link rel="stylesheet" href="styles.css" />
  <![endif]-->
  <link href='http://fonts.googleapis.com/css?family=Alegreya+Sans:400,700' rel='stylesheet' type='text/css'>
  <script src="modernizr.custom.65897.js"></script>
</head>

<body>
  <div id="container">
    <header>
      <hgroup>
        <h1>
          <img src="images/ewis.png" width="206" height="132" alt="" title="" />
        </h1>
        <p>Eating Well in Season</p>
      </hgroup>
    </header>

    <nav>
      <ul>
        <li><a href="#">About Us</a></li>
        <li class="currentPage"><a href="#">Sign Up</a></li>
        <li><a href="#">Calendar</a></li>
        <li><a href="#">Contact</a></li>
      </ul>
    </nav>
  </div>

  <article>
    <h2>Your form has been submitted</h2>
    <div class="results">
      <h3>You entered the following data:</h3>
      <ul></ul>
    </div>
  </article>
  <footer><p>Eating Well in Season &bull; Glover, VT</p></footer>

  <script>

    /* SCRIPT3.JS */

    // interpret contents using strict mode
    "use strict";


    // use parseData() to read stored cookies
    function parseData() {

      // assign formData to document cookie
      var formData = document.cookie;
      // declare empty form array
      var formArray = [];
      // assign shorthand reference to unordered list
      var list = document.querySelector("div.results ul");

      // use split() method of String class to divide formData values at each "&"
      // store results as elements in formArray
      formArray = formData.split("; ");

      // iterate via for loop to create a new li element
      // assign as innerHTML corresponding array elements
      // add each li element as child of ul element via list variable)
      for (var i = 0; i < formArray.length; i++) {
        var newItem = document.createElement("li");
        newItem.innerHTML = formArray[i];
        list.appendChild(newItem);
      }
    }


/*  query string method

    // use parseData() to read query strings
    function parseData() {

      // convert encoded characters in query string with character equivalents
      var formData = decodeURIComponent(location.search);
      var formArray = [];
      var list = document.querySelector("div.results ul");

      // remove leading ? from query string and assign value to formData
      formData = formData.substring(1, formData.length);

      // replace each occurrence of + with a space
      while (formData.indexOf("+") !== -1) {
        formData = formData.replace("+", " ");
      }

      // convert remaining encoded characters in query string with character equivalents
      formData = decodeURIComponent(formData);

      // use split() method of String class to divide formData values at each "&"
      // store results as elements in formArray
      formArray = formData.split("&");

      // iterate via for loop to create a new li element
      // assign as innerHTML corresponding array elements
      // add each li element as child of ul element via list variable)
      for (var i = 0; i < formArray.length; i++){
        var newItem = document.createElement("li");
        newItem.innerHTML = formArray[i];
        list.appendChild(newItem);
      }
    }
*/


    // invoke parseData() on page load
    if (window.addEventListener) {
      window.addEventListener("load", parseData, false);
    } else if (window.attachEvent) {
      window.attachEvent("onload", parseData);
    }
  </script>
</body>
</html>